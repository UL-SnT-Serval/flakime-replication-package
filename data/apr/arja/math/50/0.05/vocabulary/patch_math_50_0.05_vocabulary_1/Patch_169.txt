1 InsertBefore /home/renaud/workspaces/flakime-replication-package/results/math/50/0.05/vocabulary/project/src/main/java/org/apache/commons/math/geometry/euclidean/oned/OrientedPoint.java 75
Faulty:
return new SubOrientedPoint(this,null);
Seed:
this.direct=direct;
**************************************************
2 InsertBefore /home/renaud/workspaces/flakime-replication-package/results/math/50/0.05/vocabulary/project/src/main/java/org/apache/commons/math/geometry/euclidean/oned/IntervalsSet.java 93
Faulty:
if (Double.isInfinite(lower) && (lower < 0)) {
  if (Double.isInfinite(upper) && (upper > 0)) {
    return new BSPTree<Euclidean1D>(Boolean.TRUE);
  }
  final SubHyperplane<Euclidean1D> upperCut=new OrientedPoint(new Vector1D(upper),true).wholeHyperplane();
  return new BSPTree<Euclidean1D>(upperCut,new BSPTree<Euclidean1D>(Boolean.FALSE),new BSPTree<Euclidean1D>(Boolean.TRUE),null);
}
Seed:
if (Double.isInfinite(lower) && (lower < 0)) {
  if (Double.isInfinite(upper) && (upper > 0)) {
    return new BSPTree<Euclidean1D>(Boolean.TRUE);
  }
  final SubHyperplane<Euclidean1D> upperCut=new OrientedPoint(new Vector1D(upper),true).wholeHyperplane();
  return new BSPTree<Euclidean1D>(upperCut,new BSPTree<Euclidean1D>(Boolean.FALSE),new BSPTree<Euclidean1D>(Boolean.TRUE),null);
}
**************************************************
3 Replace /home/renaud/workspaces/flakime-replication-package/results/math/50/0.05/vocabulary/project/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java 188
Faulty:
x0=0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1),atol));
Seed:
f0=f1;
**************************************************
Evaluations: 163
EstimatedTime: 219067
