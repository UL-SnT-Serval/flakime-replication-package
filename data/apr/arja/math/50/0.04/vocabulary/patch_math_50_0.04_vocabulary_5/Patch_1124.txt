1 Delete /home/renaud/workspaces/flakime-replication-package/results/math/50/0.04/vocabulary/project/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java 188
Faulty:
x0=0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1),atol));
Seed:
switch (method) {
case ILLINOIS:
  f0*=0.5;
break;
case PEGASUS:
f0*=f1 / (f1 + fx);
break;
case REGULA_FALSI:
if (x == x1) {
x0=0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;
default :
throw new MathInternalError();
}
**************************************************
2 InsertBefore /home/renaud/workspaces/flakime-replication-package/results/math/50/0.04/vocabulary/project/src/main/java/org/apache/commons/math/util/FastMath.java 2739
Faulty:
if (xa > 1.5707963267948966) {
  int k=(int)(xa * 0.6366197723675814);
  double remA;
  double remB;
  while (true) {
    double a=-k * 1.570796251296997;
    remA=xa + a;
    remB=-(remA - xa - a);
    a=-k * 7.549789948768648E-8;
    double b=remA;
    remA=a + b;
    remB+=-(remA - b - a);
    a=-k * 6.123233995736766E-17;
    b=remA;
    remA=a + b;
    remB+=-(remA - b - a);
    if (remA > 0.0) {
      break;
    }
    k--;
  }
  quadrant=k & 3;
  xa=remA;
  xb=remB;
}
Seed:
if (xa > 1.5707963267948966) {
  int k=(int)(xa * 0.6366197723675814);
  double remA;
  double remB;
  while (true) {
    double a=-k * 1.570796251296997;
    remA=xa + a;
    remB=-(remA - xa - a);
    a=-k * 7.549789948768648E-8;
    double b=remA;
    remA=a + b;
    remB+=-(remA - b - a);
    a=-k * 6.123233995736766E-17;
    b=remA;
    remA=a + b;
    remB+=-(remA - b - a);
    if (remA > 0.0) {
      break;
    }
    k--;
  }
  quadrant=k & 3;
  xa=remA;
  xb=remB;
}
**************************************************
Evaluations: 1315
EstimatedTime: 2395750
