1 Replace /home/renaud/workspaces/flakime-replication-package/results/math/50/0.02/vocabulary/project/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java 188
Faulty:
x0=0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1),atol));
Seed:
f0=f1;
**************************************************
2 Delete /home/renaud/workspaces/flakime-replication-package/results/math/50/0.02/vocabulary/project/src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java 1297
Faulty:
while (p < pEnd - 3) {
  sum=sum.add(block[k].multiply(v[p])).add(block[k + jWidth].multiply(v[p + 1])).add(block[k + jWidth2].multiply(v[p + 2])).add(block[k + jWidth3].multiply(v[p + 3]));
  k+=jWidth4;
  p+=4;
}
Seed:
for (int jBlock=0; jBlock < blockColumns; ++jBlock) {
  final T[] block=blocks[iBlock * blockColumns + jBlock];
  final int qStart=jBlock * BLOCK_SIZE;
  final int qEnd=FastMath.min(qStart + BLOCK_SIZE,columns);
  int k=0;
  for (int p=pStart; p < pEnd; ++p) {
    T sum=zero;
    int q=qStart;
    while (q < qEnd - 3) {
      sum=sum.add(block[k].multiply(v[q])).add(block[k + 1].multiply(v[q + 1])).add(block[k + 2].multiply(v[q + 2])).add(block[k + 3].multiply(v[q + 3]));
      k+=4;
      q+=4;
    }
    while (q < qEnd) {
      sum=sum.add(block[k++].multiply(v[q++]));
    }
    out[p]=out[p].add(sum);
  }
}
**************************************************
Evaluations: 208
EstimatedTime: 123077
