1 Replace /home/renaud/workspaces/flakime-replication-package/results/math/50/0.02/vocabulary/project/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java 188
Faulty:
x0=0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1),atol));
Seed:
if (fx == 0.0) {
  return x;
}
**************************************************
2 Replace /home/renaud/workspaces/flakime-replication-package/results/math/50/0.02/vocabulary/project/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java 239
Faulty:
return x1;
Seed:
return (f1 >= 0) ? x1 : x0;
**************************************************
3 InsertBefore /home/renaud/workspaces/flakime-replication-package/results/math/50/0.02/vocabulary/project/src/main/java/org/apache/commons/math/random/RandomDataImpl.java 245
Faulty:
throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,lower,upper,false);
Seed:
this.rand=rand;
**************************************************
4 InsertBefore /home/renaud/workspaces/flakime-replication-package/results/math/50/0.02/vocabulary/project/src/main/java/org/apache/commons/math/util/FastMath.java 3538
Faulty:
if (n < -277) {
  return (f > 0) ? 0.0f : -0.0f;
}
Seed:
for (int i=0; i < 14; i++) {
  double xs[]=new double[2];
  double ys[]=new double[2];
  double as[]=new double[2];
  as[0]=COSINE_TABLE_A[i];
  as[1]=COSINE_TABLE_B[i];
  splitReciprocal(as,ys);
  xs[0]=SINE_TABLE_A[i];
  xs[1]=SINE_TABLE_B[i];
  splitMult(xs,ys,as);
  TANGENT_TABLE_A[i]=as[0];
  TANGENT_TABLE_B[i]=as[1];
}
**************************************************
Evaluations: 197
EstimatedTime: 207532
