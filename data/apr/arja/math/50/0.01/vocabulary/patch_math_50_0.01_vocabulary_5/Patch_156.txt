1 Replace /home/renaud/workspaces/flakime-replication-package/results/math/50/0.01/vocabulary/project/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java 188
Faulty:
x0=0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1),atol));
Seed:
if (f0 == 0.0) {
  return x0;
}
**************************************************
2 Delete /home/renaud/workspaces/flakime-replication-package/results/math/50/0.01/vocabulary/project/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java 189
Faulty:
f0=computeObjectiveValue(x0);
Seed:
switch (allowed) {
case ANY_SIDE:
  return x1;
case LEFT_SIDE:
return inverted ? x1 : x0;
case RIGHT_SIDE:
return inverted ? x0 : x1;
case BELOW_SIDE:
return (f1 <= 0) ? x1 : x0;
case ABOVE_SIDE:
return (f1 >= 0) ? x1 : x0;
default :
throw new MathInternalError();
}
**************************************************
3 InsertBefore /home/renaud/workspaces/flakime-replication-package/results/math/50/0.01/vocabulary/project/src/main/java/org/apache/commons/math/random/AbstractRandomGenerator.java 179
Faulty:
return (long)((2d * nextDouble() - 1d) * Long.MAX_VALUE);
Seed:
cachedNormalDeviate=Double.NaN;
**************************************************
4 InsertBefore /home/renaud/workspaces/flakime-replication-package/results/math/50/0.01/vocabulary/project/src/main/java/org/apache/commons/math/util/FastMath.java 1498
Faulty:
return x;
Seed:
if (x == Double.NEGATIVE_INFINITY) {
  return Math.PI * 3.0 / 4.0;
}
**************************************************
5 InsertBefore /home/renaud/workspaces/flakime-replication-package/results/math/50/0.01/vocabulary/project/src/main/java/org/apache/commons/math/util/FastMath.java 1507
Faulty:
final double lores=log(xpa,hiPrec);
Seed:
expm1(x * 2.0,hiPrec);
**************************************************
Evaluations: 159
EstimatedTime: 415478
