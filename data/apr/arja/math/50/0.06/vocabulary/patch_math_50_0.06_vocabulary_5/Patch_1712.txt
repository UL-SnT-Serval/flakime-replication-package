1 InsertBefore /home/renaud/workspaces/flakime-replication-package/results/math/50/0.06/vocabulary/project/src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java 111
Faulty:
fval_1[i][j]=f.value(xval[i]);
Seed:
if (fval[i].length != yLen) {
  throw new DimensionMismatchException(fval[i].length,yLen);
}
**************************************************
2 Delete /home/renaud/workspaces/flakime-replication-package/results/math/50/0.06/vocabulary/project/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java 188
Faulty:
x0=0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1),atol));
Seed:
if (FastMath.abs(f1) <= ftol) {
switch (allowed) {
case ANY_SIDE:
    return x1;
case LEFT_SIDE:
  if (inverted) {
    return x1;
  }
break;
case RIGHT_SIDE:
if (!inverted) {
return x1;
}
break;
case BELOW_SIDE:
if (f1 <= 0) {
return x1;
}
break;
case ABOVE_SIDE:
if (f1 >= 0) {
return x1;
}
break;
default :
throw new MathInternalError();
}
}
**************************************************
3 InsertBefore /home/renaud/workspaces/flakime-replication-package/results/math/50/0.06/vocabulary/project/src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java 121
Faulty:
yFitter.addObservedPoint(1,yval[j],fval_1[i][j]);
Seed:
yPolyX[j]=new PolynomialFunction(xFitter.fit());
**************************************************
Evaluations: 1831
EstimatedTime: 3152309
