1 InsertBefore /home/renaud/workspaces/flakime-replication-package/results/math/50/0.06/vocabulary/project/src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java 132
Faulty:
for (int j=0; j < yLen; j++) {
  fval_2[i][j]=f.value(yval[j]);
}
Seed:
if (fval[i].length != yLen) {
  throw new DimensionMismatchException(fval[i].length,yLen);
}
**************************************************
2 InsertBefore /home/renaud/workspaces/flakime-replication-package/results/math/50/0.06/vocabulary/project/src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java 96
Faulty:
for (int j=0; j < yLen; j++) {
  xFitter.clearObservations();
  for (int i=0; i < xLen; i++) {
    xFitter.addObservedPoint(1,xval[i],fval[i][j]);
  }
  yPolyX[j]=new PolynomialFunction(xFitter.fit());
}
Seed:
for (int j=0; j < yLen; j++) {
  xFitter.clearObservations();
  for (int i=0; i < xLen; i++) {
    xFitter.addObservedPoint(1,xval[i],fval[i][j]);
  }
  yPolyX[j]=new PolynomialFunction(xFitter.fit());
}
**************************************************
3 Replace /home/renaud/workspaces/flakime-replication-package/results/math/50/0.06/vocabulary/project/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java 188
Faulty:
x0=0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1),atol));
Seed:
incrementEvaluationCount();
**************************************************
Evaluations: 1075
EstimatedTime: 1809904
