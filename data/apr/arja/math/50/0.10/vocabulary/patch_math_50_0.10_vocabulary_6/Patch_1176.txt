1 Replace /home/renaud/workspaces/flakime-replication-package/results/math/50/0.10/vocabulary/project/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java 188
Faulty:
x0=0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1),atol));
Seed:
if (f1 * fx < 0) {
  x0=x1;
  f0=f1;
  inverted=!inverted;
}
 else {
switch (method) {
case ILLINOIS:
    f0*=0.5;
  break;
case PEGASUS:
f0*=f1 / (f1 + fx);
break;
case REGULA_FALSI:
if (x == x1) {
x0=0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1),atol));
f0=computeObjectiveValue(x0);
}
break;
default :
throw new MathInternalError();
}
}
**************************************************
2 InsertBefore /home/renaud/workspaces/flakime-replication-package/results/math/50/0.10/vocabulary/project/src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java 588
Faulty:
throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.PERCENTILE_IMPLEMENTATION_UNSUPPORTED_METHOD,percentileImpl.getClass().getName(),SET_QUANTILE_METHOD_NAME);
Seed:
this.varianceImpl=varianceImpl;
**************************************************
3 Replace /home/renaud/workspaces/flakime-replication-package/results/math/50/0.10/vocabulary/project/src/main/java/org/apache/commons/math/util/FastMath.java 3725
Faulty:
return x;
Seed:
if (x <= -1.0 || x >= 1.0) {
  double hiPrec[]=new double[2];
  exp(x,0.0,hiPrec);
  if (x > 0.0) {
    return -1.0 + hiPrec[0] + hiPrec[1];
  }
 else {
    final double ra=-1.0 + hiPrec[0];
    double rb=-(ra + 1.0 - hiPrec[0]);
    rb+=hiPrec[1];
    return ra + rb;
  }
}
**************************************************
Evaluations: 1306
EstimatedTime: 1523677
