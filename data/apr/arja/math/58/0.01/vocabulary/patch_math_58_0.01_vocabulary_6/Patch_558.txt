1 Delete /home/renaud/workspaces/flakime-replication-package/results/math/58/0.01/vocabulary/project/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java 223
Faulty:
if (idxStep == 0) {
  throw new ZeroException();
}
Seed:
Arrays.sort(points,createWeightedObservedPointComparator());
**************************************************
2 Replace /home/renaud/workspaces/flakime-replication-package/results/math/58/0.01/vocabulary/project/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java 121
Faulty:
return fit(new Gaussian.Parametric(),guess);
Seed:
return fit((new ParameterGuesser(getObservations())).guess());
**************************************************
3 Delete /home/renaud/workspaces/flakime-replication-package/results/math/58/0.01/vocabulary/project/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java 275
Faulty:
maxY=Math.max(maxY,point.getY());
Seed:
if (idxStep == 0) {
  throw new ZeroException();
}
**************************************************
4 InsertBefore /home/renaud/workspaces/flakime-replication-package/results/math/58/0.01/vocabulary/project/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java 273
Faulty:
for (final WeightedObservedPoint point : points) {
  minY=Math.min(minY,point.getY());
  maxY=Math.max(maxY,point.getY());
}
Seed:
for (int i=startIdx; (idxStep < 0) ? (i + idxStep >= 0) : (i + idxStep < points.length); i+=idxStep) {
  if (isBetween(y,points[i].getY(),points[i + idxStep].getY())) {
    return (idxStep < 0) ? new WeightedObservedPoint[]{points[i + idxStep],points[i]} : new WeightedObservedPoint[]{points[i],points[i + idxStep]};
  }
}
**************************************************
5 InsertBefore /home/renaud/workspaces/flakime-replication-package/results/math/58/0.01/vocabulary/project/src/main/java/org/apache/commons/math/complex/Complex.java 621
Faulty:
return createComplex(expReal * FastMath.cos(imaginary),expReal * FastMath.sin(imaginary));
Seed:
if (isNaN()) {
  return Complex.NaN;
}
**************************************************
Evaluations: 649
EstimatedTime: 559566
