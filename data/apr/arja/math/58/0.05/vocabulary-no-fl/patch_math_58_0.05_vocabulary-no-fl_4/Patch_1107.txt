1 InsertBefore /home/renaud/workspaces/flakime-replication-package/data/apr/arja/math/58/0.05/vocabulary-no-fl/project/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java 179
Faulty:
double fwhmX1=interpolateXAtY(points,maxYIdx,-1,halfY);
Seed:
fwhmApprox=points[points.length - 1].getX() - points[0].getX();
**************************************************
2 Delete /home/renaud/workspaces/flakime-replication-package/data/apr/arja/math/58/0.05/vocabulary-no-fl/project/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java 275
Faulty:
maxY=Math.max(maxY,point.getY());
Seed:
for (int i=startIdx; (idxStep < 0) ? (i + idxStep >= 0) : (i + idxStep < points.length); i+=idxStep) {
  if (isBetween(y,points[i].getY(),points[i + idxStep].getY())) {
    return (idxStep < 0) ? new WeightedObservedPoint[]{points[i + idxStep],points[i]} : new WeightedObservedPoint[]{points[i],points[i + idxStep]};
  }
}
**************************************************
3 Replace /home/renaud/workspaces/flakime-replication-package/data/apr/arja/math/58/0.05/vocabulary-no-fl/project/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java 121
Faulty:
return fit(new Gaussian.Parametric(),guess);
Seed:
return fit((new ParameterGuesser(getObservations())).guess());
**************************************************
4 InsertBefore /home/renaud/workspaces/flakime-replication-package/data/apr/arja/math/58/0.05/vocabulary-no-fl/project/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java 198
Faulty:
for (int i=1; i < points.length; i++) {
  if (points[i].getY() > points[maxYIdx].getY()) {
    maxYIdx=i;
  }
}
Seed:
if (observations == null) {
  throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
}
**************************************************
5 Replace /home/renaud/workspaces/flakime-replication-package/data/apr/arja/math/58/0.05/vocabulary-no-fl/project/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java 169
Faulty:
Arrays.sort(points,createWeightedObservedPointComparator());
Seed:
if (observations.length < 3) {
  throw new NumberIsTooSmallException(observations.length,3,true);
}
**************************************************
Evaluations: 1124
EstimatedTime: 432123
