1 InsertBefore /home/renaud/workspaces/flakime-replication-package/results/math/22/0.01/vocabulary/project/src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory.java 58
Faulty:
final Double[] points=new Double[numberOfPoints];
Seed:
if (numberOfPoints == 1) {
  return new Pair<Double[],Double[]>(new Double[]{0d},new Double[]{2d});
}
**************************************************
2 Replace /home/renaud/workspaces/flakime-replication-package/results/math/22/0.01/vocabulary/project/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java 184
Faulty:
return false;
Seed:
return true;
**************************************************
3 Replace /home/renaud/workspaces/flakime-replication-package/results/math/22/0.01/vocabulary/project/src/main/java/org/apache/commons/math3/distribution/FDistribution.java 275
Faulty:
return true;
Seed:
return false;
**************************************************
4 InsertBefore /home/renaud/workspaces/flakime-replication-package/results/math/22/0.01/vocabulary/project/src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory.java 97
Faulty:
done=b - a <= Math.ulp(c);
Seed:
for (int j=1; j < numberOfPoints; j++) {
  final double ppc=((2 * j + 1) * c * pc - j * pmc) / (j + 1);
  pmc=pc;
  pc=ppc;
}
**************************************************
Evaluations: 1742
EstimatedTime: 1092129
