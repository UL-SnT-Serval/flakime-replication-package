1 InsertBefore /home/renaud/workspaces/flakime-replication-package/results/math/39/0.00/vocabulary/project/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java 252
Faulty:
for (int k=1; k < stages; ++k) {
  for (int j=0; j < y0.length; ++j) {
    double sum=a[k - 1][0] * yDotK[0][j];
    for (int l=1; l < k; ++l) {
      sum+=a[k - 1][l] * yDotK[l][j];
    }
    yTmp[j]=y[j] + stepSize * sum;
  }
  computeDerivatives(stepStart + c[k - 1] * stepSize,yTmp,yDotK[k]);
}
Seed:
if (!isLastStep) {
  interpolator.storeTime(stepStart);
  final double nextT=stepStart + stepSize;
  final boolean nextIsLast=forward ? (nextT >= t) : (nextT <= t);
  if (nextIsLast) {
    stepSize=t - stepStart;
  }
}
**************************************************
2 InsertBefore /home/renaud/workspaces/flakime-replication-package/results/math/39/0.00/vocabulary/project/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java 262
Faulty:
computeDerivatives(stepStart + c[k - 1] * stepSize,yTmp,yDotK[k]);
Seed:
this.safety=safety;
**************************************************
Evaluations: 785
EstimatedTime: 2060561
