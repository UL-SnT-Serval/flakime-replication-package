1 InsertBefore /home/renaud/workspaces/flakime-replication-package/results/math/39/0.00/vocabulary/project/src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java 247
Faulty:
return 8;
Seed:
setMinReduction(0.2);
**************************************************
2 InsertBefore /home/renaud/workspaces/flakime-replication-package/results/math/39/0.00/vocabulary/project/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java 244
Faulty:
hNew=initializeStep(forward,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
Seed:
for (int j=0; j < y0.length; ++j) {
  double sum=b[0] * yDotK[0][j];
  for (int l=1; l < stages; ++l) {
    sum+=b[l] * yDotK[l][j];
  }
  yTmp[j]=y[j] + stepSize * sum;
}
**************************************************
3 InsertBefore /home/renaud/workspaces/flakime-replication-package/results/math/39/0.00/vocabulary/project/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java 255
Faulty:
double sum=a[k - 1][0] * yDotK[0][j];
Seed:
if (!isLastStep) {
  interpolator.storeTime(stepStart);
  final double nextT=stepStart + stepSize;
  final boolean nextIsLast=forward ? (nextT >= t) : (nextT <= t);
  if (nextIsLast) {
    stepSize=t - stepStart;
  }
}
**************************************************
Evaluations: 1349
EstimatedTime: 2954034
