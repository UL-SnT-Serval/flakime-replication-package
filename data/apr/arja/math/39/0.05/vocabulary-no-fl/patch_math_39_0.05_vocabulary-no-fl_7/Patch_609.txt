1 InsertBefore /home/renaud/workspaces/flakime-replication-package/data/apr/arja/math/39/0.05/vocabulary-no-fl/project/src/main/java/org/apache/commons/math/util/FastMath.java 3258
Faulty:
if (d == 0) {
  return (direction < 0) ? -Double.MIN_VALUE : Double.MIN_VALUE;
}
Seed:
if (Double.isNaN(d) || Double.isNaN(direction)) {
  return Double.NaN;
}
 else if (d == direction) {
  return direction;
}
 else if (Double.isInfinite(d)) {
  return (d < 0) ? -Double.MAX_VALUE : Double.MAX_VALUE;
}
 else if (d == 0) {
  return (direction < 0) ? -Double.MIN_VALUE : Double.MIN_VALUE;
}
**************************************************
2 InsertBefore /home/renaud/workspaces/flakime-replication-package/data/apr/arja/math/39/0.05/vocabulary-no-fl/project/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java 255
Faulty:
double sum=a[k - 1][0] * yDotK[0][j];
Seed:
if (!isLastStep) {
  interpolator.storeTime(stepStart);
  final double nextT=stepStart + stepSize;
  final boolean nextIsLast=forward ? (nextT >= t) : (nextT <= t);
  if (nextIsLast) {
    stepSize=t - stepStart;
  }
}
**************************************************
Evaluations: 728
EstimatedTime: 1460375
